'use client';

import React, { useState } from 'react';
import { Button, Form, Spinner, Collapse, OverlayTrigger, Tooltip } from 'react-bootstrap';

export default function AiLookupButton() {
  const [question, setQuestion] = useState('');
  const [answer, setAnswer] = useState('');
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [showForm, setShowForm] = useState(false);

  const handleLookup = async () => {
    if (!question.trim()) {
      setError('Please enter a question.');
      return;
    }

    setLoading(true);
    setAnswer('');
    setError(null);

    try {
      const response = await fetch('/api/ai-lookup', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ question }),
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.error || 'Something went wrong with the AI lookup.');
      }

      const data = await response.json();
      setAnswer(data.answer);
    } catch (err) {
      console.error('Client-side AI Lookup Error:', err);
      setError(err.message || 'An unexpected error occurred.');
    } finally {
      setLoading(false);
    }
  };

  const renderTooltip = (props) => (
    <Tooltip id="button-tooltip" {...props}>
      AI Assistant
    </Tooltip>
  );

  return (
    <div style={{ margin: '20px 0', padding: '15px', border: '1px solid #e0e0e0', borderRadius: '8px', background: '#f9f9f9' }}>
      <OverlayTrigger placement="right" delay={{ show: 250, hide: 400 }} overlay={renderTooltip}>
        <Button
          onClick={() => setShowForm(!showForm)}
          aria-controls="ai-lookup-collapse-text"
          aria-expanded={showForm}
          variant="outline-info"
          size="sm"
          style={{
            fontSize: '1.2em',
            padding: '5px 10px',
            display: 'flex',
            alignItems: 'center',
            gap: '5px',
          }}
        >
          ðŸ¤– {showForm ? 'Hide Assistant' : 'AI Assistant'}
        </Button>
      </OverlayTrigger>

      <Collapse in={showForm}>
        <div id="ai-lookup-collapse-text" style={{ marginTop: '15px' }}>
          <Form.Group className="mb-3">
            <Form.Label>Ask a general question:</Form.Label>
            <Form.Control
              type="text"
              placeholder="e.g., At what age do babies start eating solid food?"
              value={question}
              onChange={(e) => setQuestion(e.target.value)}
              onKeyPress={(e) => {
                if (e.key === 'Enter') {
                  e.preventDefault();
                  handleLookup();
                }
              }}
              disabled={loading}
            />
          </Form.Group>

          <Button onClick={handleLookup} disabled={loading} variant="primary">
            {loading ? <Spinner animation="border" size="sm" /> : 'Get Answer'}
          </Button>

          {error && <p style={{ color: 'red', marginTop: '10px' }}>Error: {error}</p>}

          {answer && (
            <div style={{ marginTop: '15px', padding: '10px', background: '#fff', border: '1px solid #d0d0d0', borderRadius: '5px' }}>
              <strong>AI Answer:</strong>
              <p>{answer}</p>
              <p style={{ fontSize: '0.8em', color: '#666', fontStyle: 'italic' }}>**Disclaimer:** This information is generated by an AI and should not be considered professional medical or childcare advice. Always consult with a qualified professional for specific guidance.</p>
            </div>
          )}
        </div>
      </Collapse>
    </div>
  );
}
